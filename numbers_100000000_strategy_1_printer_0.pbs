#!/bin/bash

#PBS -q studenti
#PBS -l nodes=8:ppn=8
#PBS -N numbers_100000000_strategy_1_printer_0
#PBS -o numbers_100000000_strategy_1_printer_0.out
#PBS -e numbers_100000000_strategy_1_printer_0.err

sort -u $PBS_NODEFILE > hostlist
NCPU=`wc -l < hostlist`
echo ------------------------------------------------------
echo ' This job is allocated on '${NCPU}' cpu(s)'
echo 'Job is running on node(s): '
cat hostlist
PBS_O_WORKDIR=$PBS_O_HOME/project_sum_of_numbers
echo ------------------------------------------------------
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: node file is $PBS_NODEFILE
echo PBS: current home directory is $PBS_O_HOME
echo PBS: PATH = $PBS_O_PATH
echo ------------------------------------------------------
echo "Eseguo/usr/lib64/openmpi/1.4-gcc/bin/mpicc -o $PBS_O_WORKDIR/numbers_sum $PBS_O_WORKDIR/main.c"
/usr/lib64/openmpi/1.4-gcc/bin/mpicc -o $PBS_O_WORKDIR/project_sum_of_numbers $PBS_O_WORKDIR/main.c
echo "Eseguo:/usr/lib64/openmpi/1.4-gcc/bin/-machinefile $PBS_NODEFILE -n 8 $PBS_O_WORKDIR/project_sum_of_numbers"


for((i=1;i<=8;i++))
do
    echo "Executing with $i processors"
    /usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile hostlist -n $i $PBS_O_WORKDIR/project_sum_of_numbers 100000000 1 0
done
